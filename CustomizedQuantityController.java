package application;

import javafx.fxml.FXML;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;

import java.util.ArrayList;

import javafx.event.ActionEvent;

import javafx.scene.control.ListView;
import javafx.scene.control.ProgressBar;

public class CustomizedQuantityController {
	@FXML
	private Button btnClose;
	@FXML
	private ListView<HBox> lvCustomizeItem;
	@FXML
	private TextField txfUnit;
	@FXML
	private Button btnSubmit;
	@FXML
	private Button btnDelete;

	public static String[] data;
	public static String maximumSize;
	ItemData use;
	static String CustomizeUnit = "";
	@FXML
	void btnCloseOnAction(ActionEvent event) {
		 Stage stage=(Stage)((Node) event.getSource()).getScene().getWindow();
		 stage.close();
	}
	
	// Event Listener on TextField[#txfUnit].onAction
	@FXML
	public void UnitOnAction(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnSubmit].onAction
	@FXML
	public void SubmitOnAction(ActionEvent event) {
		if (!txfUnit.getText().isEmpty()&&txfUnit.getText().matches("\\d*")) {
				if (lvCustomizeItem.getSelectionModel().getSelectedIndex()>-1) {
					int selected = lvCustomizeItem.getSelectionModel().getSelectedIndex();
					data[selected] = Integer.parseInt(data[selected])-Integer.parseInt(txfUnit.getText())+"";
					String[] temp =new String[ data.length-1];
					CustomizeUnit = "";
					for (int i = 0; i < temp.length; i++) {
						temp[i]= data[i];
						if (!temp[i].equals(maximumSize)) {
							CustomizeUnit= CustomizeUnit+temp[i]+",";
						}
						
					}
					CustomizeUnit = CustomizeUnit+maximumSize;
					PosController.setUnitData(Integer.parseInt(txfUnit.getText()));
					Stage stage=(Stage)((Node) event.getSource()).getScene().getWindow();
			    	stage.close();
				}else {
					new Alert(AlertType.INFORMATION,"Please Select One Item ",ButtonType.CLOSE).show();
				}
			
		}else {
			new Alert(AlertType.INFORMATION,"Please Input A Valid Number ",ButtonType.CLOSE).show();
		}
	}
	public static String getCustomizeUnit() {
		return CustomizeUnit;
	}
	public static void setCustomizeUnit(String customizeUnit) {
		CustomizeUnit = customizeUnit;
	}
	// Event Listener on Button[#btnDelete].onAction
	@FXML
	public void DeleteOnAction(ActionEvent event) {
		int selected = lvCustomizeItem.getSelectionModel().getSelectedIndex();
		lvCustomizeItem.getItems().remove(selected);
		String[] temp =new String[ data.length-1];
		CustomizeUnit = "";
		for (int i = 0; i < temp.length; i++) {
			if (i!=selected) {
					
				temp[i]= data[i];
				if (!temp[i].equals(maximumSize)) {
					CustomizeUnit= CustomizeUnit+temp[i]+",";
				}
			}
		}
		CustomizeUnit = CustomizeUnit+maximumSize;
		POSDBcontrol.reduceItem(use.getItem_ID(), 1);
		POSDBcontrol.saveCustomizeUnit(use.getItem_ID(), CustomizeUnit);
		
	}
	@FXML
	public void initialize() {
		
		use = PosController.selected;
		data = new String[use.getQuantity()];
		String unit = POSDBcontrol.getUnit(Integer.parseInt(use.getUnit_Name()));
		String customize[] = use.getCustomize_Quantity().split(",");
		maximumSize = customize[customize.length-1];
		for (int i = 0; i < use.getQuantity(); i++) {
			if (i<customize.length-1) {
				Double percentage = Double.parseDouble(customize[i])/Double.parseDouble(customize[customize.length-1]);
				HBox row = new HBox();
				ProgressBar pb = new ProgressBar(percentage);
				Label lb = new Label(customize[i]+" "+ unit);
				row.getChildren().addAll(pb,lb);
				lvCustomizeItem.getItems().add(row);
				pb.setPrefSize(380, 30);
				row.setMargin(pb, new Insets(0,5,0,0));
				lb.setPrefSize(70, 30);
				lb.setAlignment(Pos.CENTER);
				lb.setStyle("-fx-background-color: #639A67;"
						+ "-fx-text-fill: white;");
				pb.setStyle("-fx-accent: #639A67;");
				data[i] = customize[i];
			}else {
					
				HBox row = new HBox();
				ProgressBar pb = new ProgressBar(1);
				Label lb = new Label(customize[customize.length-1]+" "+ unit);
				row.getChildren().addAll(pb,lb);
				lvCustomizeItem.getItems().add(row);
				pb.setPrefSize(380, 30);
				row.setMargin(pb, new Insets(0,5,0,0));
				lb.setPrefSize(70, 30);
				lb.setAlignment(Pos.CENTER);
				lb.setStyle("-fx-background-color: #639A67;"
						+ "-fx-text-fill: white;");
				pb.setStyle("-fx-accent: #639A67;");
				data[i] = customize[customize.length-1];
			}
		}

	}
}
